name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'replacements/**'
      - 'fly.toml'
      - 'Dockerfile.demos'
      - 'bin/**'
      - '.github/workflows/ci.yml'
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'replacements/**'
      - 'fly.toml'
      - 'Dockerfile.demos'
      - 'bin/**'
      - '.github/workflows/ci.yml'
  schedule:
    # Monday 1PM GMT+8 = Monday 5AM UTC
    - cron: '0 5 * * 1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: github-actions-${{ github.sha }}-${{ github.run_id }}-${{github.run_attempt}}
      DOCKER_REPO: registry.fly.io
      APP_NAME: formsg
    steps:
      - name: Checkout FormSG base
        uses: actions/checkout@v4
        with:
          repository: opengovsg/FormSG
          ref: release-al2

      - name: Checkout demo overlay
        uses: actions/checkout@v4
        with:
          path: demo-overlay

      - name: Apply demo customizations
        run: |
          # Apply replacements
          cp -r demo-overlay/replacements/* . 2>/dev/null || echo "No replacements to copy"

          # Apply OG meta tags
          if [ -f frontend/index.html ]; then
            sed -i 's/__OG_TITLE__/[DEMO] Form @ demos.sg/g' frontend/index.html
            sed -i 's/__OG_DESCRIPTION__/A demo of FormSG on demos.sg/g' frontend/index.html
            sed -i 's/__OG_IMAGE__/og-img-metatag-publicform.png/g' frontend/index.html
          fi

      - name: Set app version
        run: |
          echo "APP_VERSION=$(jq -r .version package.json)-$(echo ${GITHUB_REF##*/})-$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Auth to Fly Docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl auth docker

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./demo-overlay/Dockerfile.demos
          tags: ${{env.DOCKER_REPO}}/${{env.APP_NAME}}:${{env.APP_VERSION}}

      - name: Deploy to Fly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # Copy fly.toml from demo
          cp demo-overlay/fly.toml .

          flyctl deploy --ha=false --image ${{env.DOCKER_REPO}}/${{env.APP_NAME}}:${{env.APP_VERSION}}

